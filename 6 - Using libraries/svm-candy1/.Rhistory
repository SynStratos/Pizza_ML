dataset <- read.csv(file.choose("candy_1.csv"))
dataset <- read.csv(file = "candy_1.csv")
View(dataset)
dataset <- read.csv(file = "candy_1.csv", header=FALSE)
iscandy<- c(rep(-1,10), rep(+1,10))
X <- dataset[1:10]
y <- dataset[11]
y <- as.matrix(y)
source('~/Machine Learning/svm-2/main.R')
dataset <- read.csv(file = "candy_1.csv", header=FALSE)
X <- dataset[1:10]
y <- dataset[11]
y <- as.matrix(y)
data <- data.frame(X, y=as.factor(y))
model <- svm(y~., data=data, kernel="linear", cost=1, scale=FALSE)
summary(model)
summary(model)
plot(model, data)
summary(model)
plot(model, data=data)
plot(model, data=data, V1~V2)
plot(model, data=data, V8~V9)
plot(model, data=data, V8~V10)
plot(model, data=data, V8~V10, slice = list(V1=1, V2=0))
plot(model, data=data, V8~V10, slice = list(V1=1, V2=0))
plot(model, data=data, V8~V10, slice = list(V1=4, V2=5))
plot(model, data=data, V8~V10, slice = list(V1=1, V9=1))
model <- svm(y~., data=data, kernel="polynomial", cost=1, scale=FALSE)
y <- as.matrix(y)
data <- data.frame(X, y=as.factor(y))
model <- svm(y~., data=data, kernel="polynomial", cost=1, scale=FALSE)
summary(model)
plot(model, data=data, V8~V10, slice = list(V1=1, V9=1))
tuned_model <-  tune(svm, y~., data=iris, ranges=list(epsilon = seq(0,1,0.1), cost=2^(2:7)))
tuned_model <-  tune(svm, y~., data=data, ranges=list(epsilon = seq(0,1,0.1), cost=2^(2:7)))
plot(tuned_model) #regione pi첫 scura presenta un errore minore
summary(tuned_model)
pred <- predict(best_model, data=data)
dataset <- read.csv(file = "candy_1.csv", header=FALSE)
X <- dataset[1:10]
y <- dataset[11]
y <- as.matrix(y)
data <- data.frame(X, y=as.factor(y))
model <- svm(y~., data=data, kernel="polynomial", cost=1, scale=FALSE)
summary(model)
plot(model, data=data, V8~V10, slice = list(V1=1, V9=1))
tuned_model <-  tune(svm, y~., data=data, ranges=list(epsilon = seq(0,1,0.1), cost=2^(2:7)))
plot(tuned_model) #regione pi첫 scura presenta un errore minore
summary(tuned_model)
best_model <- tuned_model$best.model
summary(best_model)
pred <- predict(best_model, data=data)
tab <- table(Predicted = pred, Actual = data$y)
print(tab)
print("misclassification error")
print(1-sum(diag(tab))/sum(tab))
help("svm")
library(e1071)
help("svm")
library(e1071)
dataset <- read.csv(file = "candy_1.csv", header=FALSE)
X <- dataset[1:10]
y <- dataset[11]
y <- as.matrix(y)
data <- data.frame(X, y=as.factor(y))
model <- svm(y~., data=data, kernel="polynomial", cost=1, scale=FALSE)
summary(model)
plot(model, data=data, V8~V10, slice = list(V1=1, V9=1))
data <- data.frame(X, y=as.factor(y))
model <- svm(y~., data=data, kernel="linear", cost=1, scale=FALSE)
summary(model)
plot(model, data=data, V8~V10, slice = list(V1=1, V9=1))
tuned_model <-  tune(svm, y~., data=data, ranges=list(epsilon = seq(0,1,0.1), cost=2^(2:7)))
plot(tuned_model) #regione pi첫 scura presenta un errore minore
summary(tuned_model)
best_model <- tuned_model$best.model
summary(best_model)
pred <- predict(best_model, data=data)
tab <- table(Predicted = pred, Actual = data$y)
print(tab)
plot(best_model)
library(e1071)
rm(list=ls())
dataset <- read.csv(file = "candy_1.csv", header=FALSE)
X <- dataset[1:10]
y <- dataset[11]
y <- as.matrix(y)
data <- data.frame(X, y=as.factor(y))
model <- svm(y~., data=data, kernel="linear", cost=1, scale=FALSE)
summary(model)
plot(model, data=data, V8~V10, slice = list(V1=1, V9=1))
tuned_model <-  tune(svm, y~., data=data, ranges=list(epsilon = seq(0,1,0.1), cost=2^(2:7)))
plot(tuned_model) #regione pi첫 scura presenta un errore minore
summary(tuned_model)
best_model <- tuned_model$best.model
plot(best_model)
plot(best_model, data=data, V8~V10, slice = list(V1=1, V9=1))
