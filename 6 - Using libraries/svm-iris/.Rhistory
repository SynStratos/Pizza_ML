#data
data(iris)
str(iris)
library(ggplot2)
install.packages("ggplot2")
qplot(Petal.Length, Petal.Width, data=iris, color = Species)
str(iris)
library(ggplot2)
qplot(Petal.Length, Petal.Width, data=iris, color = Species)
# libraries
library(ggplot2)
library(e1071)
# data
data(iris)
str(iris)
# first plot
qplot(Petal.Length, Petal.Width, data=iris, color = Species)
# support vector machine
model <- svm(Species~., data=iris)
# support vector machine
model <- svm(Species~., data=iris)
summary(model)
summary(model)
plot(model, iris)
summary(model)
plot(mode, data=iris)
summary(model)
plot(mode, data=iris, Petal.Width~Petal.Length, slice = list(Sepal.Width=3, Sepal.Length=4))
source('~/Machine Learning/svm-iris/main.R')
source('~/Machine Learning/svm-iris/main.R')
source('~/Machine Learning/svm-iris/main.R')
# confusion matric e misclassification error
pred <- predict(model, iris)
tab <- table(Predicted = pred, Actual = iris$Species)
tab
print("misclassification error:") 1-sum(diag(tab))/sum(tab)
print("misclassification error:")
1-sum(diag(tab))/sum(tab)
source('~/Machine Learning/svm-iris/main.R')
print("misclassification error:")
1-sum(diag(tab))/sum(tab)
print("misclassification error:")
print(1-sum(diag(tab))/sum(tab))
print(tab)
# support vector machine
model <- svm(Species~., data=iris, kernel="linear")
summary(model)
plot(model, data=iris, Petal.Width~Petal.Length, slice = list(Sepal.Width=3, Sepal.Length=4))
# support vector machine
model <- svm(Species~., data=iris, kernel="polynomial")
summary(model)
plot(model, data=iris, Petal.Width~Petal.Length, slice = list(Sepal.Width=3, Sepal.Length=4))
source('~/Machine Learning/svm-iris/main.R')
source('~/Machine Learning/svm-iris/main.R')
# tuning
set.seed(123)
#seq(0,1,0.1) da 0 a 1 con passo di 0.1
#2^(2:9) esponenti di 2 da 2^2 a 2^9
tuned_model <-  tune(svm, Species~., data=iris, ranges=list(epsilon = seq(0,1,0.1), cost=2^(2:9)))
plot(tuned_model)
#seq(0,1,0.1) da 0 a 1 con passo di 0.1
#2^(2:9) esponenti di 2 da 2^2 a 2^9
tuned_model <-  tune(svm, Species~., data=iris, ranges=list(epsilon = seq(0,1,0.1), cost=2^(2:7)))
plot(tuned_model) #regione piÃ¹ scura presenta un errore minore
summary(tuned_model)
# best model
best_model <- tuned_model$best.model
summary(best_model)
# confusion matrix e misclassification error
pred <- predict(model, iris)
tab <- table(Predicted = pred, Actual = iris$Species)
summary(best_model)
plot(best_model, data=iris, Petal.Width~Petal.Length, slice = list(Sepal.Width=3, Sepal.Length=4))
# confusion matrix e misclassification error
pred <- predict(best_model, iris)
tab <- table(Predicted = pred, Actual = iris$Species)
print(tab)
print("misclassification error")
print(1-sum(diag(tab))/sum(tab))
# libraries
library(ggplot2)
library(e1071)
# data
data(iris)
str(iris)
# first plot
qplot(Petal.Length, Petal.Width, data=iris, color = Species)
# support vector machine
# kernel = [linear, radial, polynomial, sigmoid]
model <- svm(Species~., data=iris, kernel="radial")
summary(model)
plot(model, data=iris, Petal.Width~Petal.Length, slice = list(Sepal.Width=3, Sepal.Length=4))
# tuning
set.seed(123)
# support vector machine
# kernel = [linear, radial, polynomial, sigmoid]
model <- svm(Species~., data=iris, kernel="linear")
summary(model)
plot(model, data=iris, Petal.Width~Petal.Length, slice = list(Sepal.Width=3, Sepal.Length=4))
